생각메모

- 딱 하나의 문제를 확실하게 해결해준다면, 작은 소프트웨어라도 충분히 서비스 할 가치가 있다. (이번 중위->후위식 서비스, 내 트리를 꾸며줘)
- 저번 스터디의 교훈 - 너무 욕심을 많이 부림. 기능을 어디까지 구현할 지에 대한 생각이 필요했다. 기능을 추가하는 건 좋지만, 보통은 기능 추가로만 끝나지 않고
  에러처리 할 게 새로 생기거나 다른 기능에 영향을 미칠 수 있음. 그런 부분에 대한 처리를 안한다면 완성도가 낮아짐

중위식(사람) -> 후위식(기계) 변환 규칙성
0. 숫자는 무조건 output stack에 push한다
1. *뒤에 +가 오면 스택에 있는 걸 전부 비우면서 output에 push해 준 뒤 +를 operators에 push한다
2. TOP에 있는 연산자랑 같은 ★레벨의★ 연산자가 들어오려고 하면 하나를 output으로 비워내고 operators에 들여보낸다
3. +뒤에 *가 하나 붙을 수 있음
4. 1~3 케이스에 해당하지 않는 경우 operators에만 push.
5. 더이상 formula에서 꺼낼 게 없는데 연산자스택에 요소가 남아있는 경우 요소들을 모두 pop시켜서 output에 붙이고 끝낸다